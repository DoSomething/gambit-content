'use strict';

/**
 * Imports.
 */
const Zendesk = require('zendesk-node-api');
const logger = require('winston');
const phone = require('phone');

let client;

/**
 * createNewClient
 *
 * @return {Object} client - Zendesk client
 */
module.exports.createNewClient = function createNewClient() {
  try {
    client = new Zendesk({
      url: process.env.ZENDESK_URL,
      email: process.env.ZENDESK_EMAIL,
      token: process.env.ZENDESK_API_TOKEN,
    });
  } catch (err) {
    logger.error(err);
  }

  return client;
};

/**
 * getClient - creates and returns a new client if one has not been created.
 *
 * @return {Object} client
 */
module.exports.getClient = function getClient() {
  if (!client) {
    return exports.createNewClient();
  }

  return client;
};

/*
 * Creates a Zendesk ticket on behalf of a User.
 * @param {object} user - A User model
 * @param {string} subject - Text to send as the ticket subject
 * @return {Promise}
 */
module.exports.createTicketForUser = function (user, subject) {
  // Returns array containing a E.164 formatted phone number, and its country code.
  // @see https://www.npmjs.com/package/phone#usage-1x-branch.
  const userPhone = phone(user.mobile);

  return exports.getClient().tickets.create({
    requester: {
      phone: userPhone[0],
      name: user.first_name ? user.first_name : 'Doer',
    },
    tags: ['gambit'],
    subject,
    comment: {
      body: 'This ticket was generated by Gambit to trigger sending a Zendesk text to this user.',
    },
  })
  .then((res) => {
    logger.debug(`created zendesk ticket ${res.ticket.id}`);

    return res.ticket;
  })
  .catch(err => err);
};
